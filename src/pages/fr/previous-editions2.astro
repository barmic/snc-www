---
import parseDate from '../../utils.js';
import edition from '../../data/current.yaml';
import Layout from '../../layouts/main.astro';

const lang = (Astro.locals as any).lang as language;
type translation = {fr: string, en: string};
type language = keyof translation;

const first = 2016;
const currentYear = parseDate(edition.start_date).getFullYear();
const editions = [...Array(currentYear - first).keys()].map((offset) => offset + 2016).reverse();

const sponsoring = [ 'chamois', 'etoile', 'flocon' ];
async function loadYear(year: number) {
  const url = new URL(`/editions/${year}.json`, Astro.url);
  const a = await fetch(url);
  return a.ok ? await a.json() : Promise.resolve({});
}

const previous_years = (await Promise.all(editions.map((year) => loadYear(year)))).filter((edition) => edition.start_date);
const trad: {[key: string]: translation} = {
  "title": {
    "fr": "Historique des éditions précédentes",
    "en": "History of previous editions",
  },
  "program": {
    "fr": "Programme",
    "en": "Program",
  },
  "photo": {
    "fr": "Photos",
    "en": "Photos",
  },
  "presentations": {
    "fr": "Présentations",
    "en": "Presentations",
  },
  "chamois": {
    "fr": "Chamois",
    "en": "Chamois",
  },
  "etoile": {
    "fr": "Étoile",
    "en": "Étoile",
  },
  "flocon": {
    "fr": "Flocon",
    "en": "Flocon",
  },
  "edition": {
    "fr": "édition",
    "en": "edition",
  }
};
---
<style>
  table th {
    padding: 10px;
    border: 1px solid black;
  }
  table td {
    padding: 10px;
    text-align: center;
    border-top: 1px solid black;
  }
  table td.sponsorCol {
    text-align: left;
  }
  .sponsorCol,
  table th .sponsorCol,
  table td .sponsorCol {
    max-width: 300px;
  }
  .sponsorLevel {
    margin-bottom: 10px;
  }
  .sponsorLevel:last-child {
    margin-bottom: 0;
  }
</style>
<Layout title={trad['title'][lang]}>
  <h2>{trad['title'][lang]}</h2>
    { previous_years.map((py, idxYear:number) => (
      <div style="display: grid; grid-template-columns: 1fr 1fr 1fr [sponsor] 1fr; place-items: center;">
        <div style="grid-column-start: 1; grid-column-end: 5"><h4>{parseDate(py.start_date).getFullYear()} ({trad['edition'][lang]} nº{previous_years.length - idxYear})</h4></div>
        <p><a href={py.program_link} target="program">{trad['program'][lang]}</a></p>
        { py.album_link &&
            <p><a href={py.album_link} target="album">{trad['photo'][lang]}</a></p>
        }
        { py.support_link &&
            <p><a href={py.support_link} target="support">{trad['presentations'][lang]}</a></p>
        }
        <div class="sponsorCol" style="grid-column: sponsor">
          {sponsoring.filter((sl) => py.sponsorship?.[sl]).map((sl:any) => (
            <div class="sponsorLevel">
              <span style="font-weight: bold;">{trad[sl][lang]}</span>:
              { py.sponsorship?.[sl]?.map((sponsor:any, idx:number) => (
                <span>
                      <a href={sponsor.link[lang]}>{sponsor.name}</a>
                  { idx < (py.sponsorship?.[sl]?.length-1) ? ', ' : ''}
                    </span>
              ))}
            </div>
          ))}
        </div>
        <hr>
      </div>
    ))}
</Layout>
