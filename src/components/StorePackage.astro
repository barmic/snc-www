---
import StoreButton from "./StoreButton.astro"
import { t } from "../i18n/i18n";
import type { StoreType } from "./store";
import DateTimeChangingChild from "./DateTimeChangingChild.astro";

interface Props {
	days: number;
  store: StoreType;
}
const { store, days } = Astro.props;
const lang = (Astro.locals as any).lang;
const title = store.title;
const desc = days === 3 ? t('store_package_universities_plus_confs') : t('store_package_confs_only');
const price = days === 3 ? store.price_univ : store.price_conf;

---
<div class="single">
  <div class="single-top">
    <h2 class="title">{t('store_package_title', title, days)}</h2>
    <h4 class="price">{price} â‚¬</h4>
    <p>{desc}</p>
  </div>
  <div class="single-bottom">
    <ul class="list-unstyled list">
      <li><i class={days === 3 ? 'fa fa-check' : 'fa fa-times'} aria-hidden="true"></i> {t('store_access_universities')}</li>
      <li><i class="fa fa-check" aria-hidden="true"></i> {t('store_access_conferences')}</li>
      <li><i class="fa fa-check" aria-hidden="true"></i> {t('store_access_breakfast', days)}</li>
      <li><i class="fa fa-check" aria-hidden="true"></i> {t('store_access_lunch', days)}</li>
      <li><i class="fa fa-check" aria-hidden="true"></i> {t('store_access_meet_and_greet')}</li>
    </ul>
    
    <DateTimeChangingChild beginDate={new Date(store.beginDate).getTime()} endDate={new Date(store.endDate).getTime()} refreshInterval="10000">
      <span class="snc-btn disabled" slot="before">{t('store_opens_on', (store.open_date as any)[lang])}</span>
      <StoreButton store={store} slot="doing"></StoreButton>
      <span class="snc-btn disabled" slot="after">{t('store_is_soldout')}</span>
    </DateTimeChangingChild>
  </div>
</div>
